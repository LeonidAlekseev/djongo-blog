version: "3.8"

services: 
  mongodb:
    image: djongo-blog/mongodb:7.0.2-ubi8
    restart: always
    build: 
      context: .
      dockerfile: ./mongodb/Dockerfile
    ports:
      - 27017:27017
    networks:
      - backend

  dev:
    image: djongo-blog/project:latest-dev
    working_dir: /home/project
    command: >
      bash -c "
        python3 ./manage.py migrate --no-input &&
        python3 ./manage.py collectstatic --no-input &&
        python3 ./manage.py createsuperuser --no-input --username ${DJANGO_SUPERUSER_USERNAME} &&
        gunicorn --workers 1 --threads 1 --reload --log-level debug -b ${DJANGO_IP}:${DJANGO_PORT} ${GUNICORN_APPLICATION}
      "
    build: 
      target: development
      context: .
      dockerfile: Dockerfile
    expose:
      - "${DJANGO_PORT}"
    volumes:
      - ./project:/home/project
    env_file:
      - ./envs/development.env
    depends_on:
      - mongodb
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "32m"
    networks:
      - frontend
      - backend
  
  prod:
    image: djongo-blog/project:latest-prod
    restart: always
    working_dir: /production/project
    command: >
      bash -c "
        python3 ./manage.py migrate --no-input &&
        python3 ./manage.py collectstatic --no-input &&
        python3 ./manage.py createsuperuser --no-input --username ${DJANGO_SUPERUSER_USERNAME} &&
        gunicorn --workers 4 --threads 4 -b ${DJANGO_IP}:${DJANGO_PORT} ${GUNICORN_APPLICATION}
      "
    build: 
      target: production
      context: .
      dockerfile: Dockerfile
    expose:
      - "${DJANGO_PORT}"
    env_file:
      - ./envs/production.env
    depends_on:
      - mongodb
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "32m"
    networks:
      - frontend
      - backend

  nginx-dev:
    image: djongo-blog/nginx:1.25-dev
    build: 
      context: .
      dockerfile: ./nginx/dev/Dockerfile
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./project/static:/srv/www/project/static
      - ./project/media:/srv/www/project/media
      - ./project/logs:/srv/www/project/logs
      - ./nginx/dev:/etc/nginx/conf.d
    depends_on:
      - dev
    networks:
      - frontend

  nginx-prod:
    image: djongo-blog/nginx:1.25-prod
    restart: always
    build: 
      context: .
      dockerfile: ./nginx/prod/Dockerfile
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - prod
    networks:
      - frontend

networks:
  frontend:
  backend: